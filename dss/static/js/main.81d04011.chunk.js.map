{"version":3,"sources":["state/actionTypes.js","state/reducers.js","state/store.js","components/VideoThumbnail.js","components/VideoList.js","state/actions.js","components/HLSSource.js","components/VideoRectangle.js","components/VideoPlayer.js","App.js","index.js"],"names":["initialPlayerState","videoSelected","videos","rootReducer","combineReducers","player","state","action","type","actionType","produce","draftState","payload","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Wrapper","styled","div","VideoThumbnail","src","name","videoIndex","onClick","className","alt","VideoList","dispatch","useDispatch","data-testid","map","video","i","key","selectVideo","thumbnail","Hls","HLSSource","props","context","hls","e","prevProps","this","initialLoad","isSupported","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","destroy","Component","VideoRectangle","useState","videoSource","setVideoSource","setInitialLoad","useEffect","path","setTimeout","muted","autoPlay","position","isVideoChild","seconds","order","rates","disabled","VideoPlayer","App","useSelector","sortedVideos","videoData","sort","a","b","localeCompare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81d04011.chunk.js","sourcesContent":["export default {\n    HYDRATE_VIDEO_DATA: 'HYDRATE_VIDEO_DATA',\n    SELECT_VIDEO: 'SELECT_VIDEO'\n}\n","import produce from 'immer';\nimport actionType from './actionTypes';\nimport { combineReducers } from 'redux';\n\nconst initialPlayerState = {\n    videoSelected: 0,\n    videos: []\n};\n\nconst playerReducer = (state = initialPlayerState, action) => {\n    switch (action.type) {\n        case actionType.HYDRATE_VIDEO_DATA:\n            return produce(state, draftState => {\n                draftState.videos = action.payload\n            });\n        case actionType.SELECT_VIDEO:\n            return produce(state, draftState => {\n                draftState.videoSelected = action.payload\n            });\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    player: playerReducer\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    box-sizing: border-box;\n    color: #FFF;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    padding: 15px 30px 20px;\n    transition: 0.1s all ease;\n\n    &:hover {\n        background: rgba(21, 72, 116, 0.25);\n    }\n\n    &.active-thumb {\n        background: rgba(21, 72, 116, 0.15);\n\n        .thumb-name {\n            background: #C9C9C9;\n            color: #000;\n        }\n    }\n\n    .thumb-name {\n        background: #333;\n        box-shadow: 0 3px 7px -4px rgba(0, 0, 0, 0.6);\n        padding: 10px 12px 12px;\n        width: 100%;\n    }\n\n    @media (max-width: 1000px) {\n        padding: 12px 10px;\n    }\n\n    @media (max-width: 750px) {\n        flex-direction: row;\n\n        img {\n            box-shadow: 0 3px 7px -4px rgba(0, 0, 0, 0.6);\n        }\n\n        .thumb-name {\n            font-size: 1.1rem;\n        }\n    }\n`;\n\nconst VideoThumbnail = ({\n    src,\n    name,\n    videoIndex,\n    videoSelected,\n    onClick\n}) => {\n    return (\n        <Wrapper\n            className={`${(videoIndex === videoSelected) ? 'active-thumb' : ''}`}\n            onClick={onClick}\n        >\n            <img alt='name' src={src} />\n            <span className=\"thumb-name\">{name}</span>\n        </Wrapper>\n    );\n};\n\nexport default VideoThumbnail;\n","import React from 'react';\nimport { selectVideo } from '../state/actions';\nimport { useDispatch } from 'react-redux';\nimport VideoThumbnail from './VideoThumbnail';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    background: #282828;\n    border-left: 1px solid #191919;\n    border-right: 1px solid #191919;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    overflow: scroll;\n    margin-left: 40px;\n    max-width: 320px;\n    width: 100%;\n\n    .heading {\n        align-items: flex-end;\n        background: #323232;\n        box-shadow: 0 9px 14px -8px #000;\n        color: #FFF;\n        display: flex;\n        justify-content: center;\n        min-height: 50px;\n        padding-bottom: 10px;\n        position: sticky;\n        top: 0;\n    }\n\n    .heading h2 {\n        font-weight: 200;\n        margin: 0;\n    }\n\n    @media (max-width: 1000px) {\n        width: 250px;\n    }\n\n    @media (max-width: 750px) {\n        border: none;\n        margin: 0 auto;\n        max-width: 100%;\n        width: 100%;\n\n        .heading {\n            background: #232323;\n            border-bottom: 1px solid #000;\n            box-shadow: none;\n            min-height: 60px;\n            padding-bottom: 20px;\n            width: 100%;\n        }\n    }\n`;\n\nconst VideoList = ({ videoSelected, videos }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <Wrapper>\n            <div className=\"heading\">\n                <h2 data-testid=\"video-list-heading\">Up Next</h2>\n            </div>\n            {\n                videos.map((video, i) => {\n                    return (\n                        <VideoThumbnail\n                            key={`${video.name}-thumbnail`}\n                            videoIndex={i}\n                            name={video.name}\n                            videoSelected={videoSelected}\n                            onClick={() => {\n                                dispatch(selectVideo(i));\n                            }}\n                            src={video.thumbnail}\n                        />\n                    );\n                })\n            }\n        </Wrapper>\n    );\n};\n\nexport default VideoList;\n","import actionType from './actionTypes';\n\nexport const initializeVideoData = videos => ({\n    type: actionType.HYDRATE_VIDEO_DATA,\n    payload: videos\n});\n\nexport const selectVideo = video => ({\n    type: actionType.SELECT_VIDEO,\n    payload: video\n});\n","import React, { Component } from 'react';\n\n/*\n    This file is based on an example from the video-react docs. See\n    how just below this comment we destructure a variable called Hls\n    off of window? That's a class provided by the hls.js library that\n    lets us use HLS technology to load and play our videos.\n\n    Long story short, HLS is a protocol that lets us divide and\n    conquer video files or streams so that we can play them in the\n    most efficient manner. You can read more about it here:\n    https://en.wikipedia.org/wiki/HTTP_Live_Streaming\n*/\n\nconst { Hls } = window;\n\nclass HLSSource extends Component {\n    constructor(props, context) {\n        super(props, context);\n        try {\n            this.hls = new Hls();\n        } catch (e) {}\n    }\n\n    componentDidUpdate(prevProps) {\n        const { src, video, initialLoad } = this.props;\n        if (src !== prevProps.src || initialLoad) {\n            if (Hls.isSupported()) {\n                this.hls.loadSource(src);\n                this.hls.attachMedia(video);\n                this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n                    video.play();\n                });\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.hls) {\n            this.hls.destroy();\n        }\n    }\n\n    render() {\n        return (\n            <source\n                src={this.props.src}\n                type={this.props.type || 'application/x-mpegURL'}\n            />\n        );\n    }\n};\n\nexport default HLSSource;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Player,\n    ControlBar,\n    ReplayControl,\n    ForwardControl,\n    CurrentTimeDisplay,\n    TimeDivider,\n    PlaybackRateMenuButton,\n    VolumeMenuButton,\n    BigPlayButton\n} from 'video-react';\nimport HLSSource from './HLSSource';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    max-width: 1200px;\n    padding-left: 25px;\n    width: 100%;\n\n    .heading {\n        align-items: center;\n        display: flex;\n        height: 60px;\n    }\n\n    .heading h1 {\n        color: #FFF;\n        font-weight: 400;\n        margin: 0;\n    }\n\n    .video-react {\n        box-shadow: 0 2px 14px -5px rgba(0, 0, 0, 0.5);\n        font-family: \"Helvetica Neue\", Arial, sans-serif;\n        padding-top: calc(100vh - 80px) !important;\n    }\n\n    .video-react .video-react-video {\n        max-height: 100vh;\n    }\n\n    @media (max-width: 1000px) {\n        max-width: calc(100% - 270px);\n    }\n\n    @media (max-width: 750px) {\n        max-width: 100vw;\n        margin-bottom: 30px;\n        padding: 0 15px;\n\n        .video-react {\n            padding-top: 75% !important;\n        }\n\n        .video-react .video-react-video {\n            max-height: 400px;\n        }\n    }\n`;\n\nconst VideoRectangle = ({ videoSelected, videos }) => {\n    const [videoSource, setVideoSource] = useState('');\n    const [initialLoad, setInitialLoad] = useState(true);\n\n    useEffect(() => {\n        setVideoSource(`${videos[videoSelected].path}`);\n\n        // let the source load with\n        // initial state before updating\n        setTimeout(() => {\n            setInitialLoad(false);\n        }, 100);\n    }, [videoSelected, videos]);\n\n    return (\n        <Wrapper>\n            <div className=\"heading\">\n                <h1 data-testid=\"video-heading\">{videos[videoSelected].name}</h1>\n            </div>\n            <Player\n                muted\n                autoPlay\n            >\n                <BigPlayButton position=\"center\" />\n                <HLSSource\n                    isVideoChild\n                    initialLoad={initialLoad}\n                    src={videoSource}\n                />\n                <ControlBar>\n                    <ReplayControl seconds={10} order={1.1} />\n                    <ForwardControl seconds={30} order={1.2} />\n                    <CurrentTimeDisplay order={4.1} />\n                    <TimeDivider order={4.2} />\n                    <PlaybackRateMenuButton rates={[5, 2, 1, 0.5, 0.1]} order={7.1} />\n                    <VolumeMenuButton disabled />\n                </ControlBar>\n            </Player>\n        </Wrapper>\n    );\n};\n\nexport default VideoRectangle;\n","import React, { Fragment } from 'react';\nimport VideoList from './VideoList';\nimport VideoRectangle from './VideoRectangle';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 0 auto;\n    min-width: 200px;\n    width: 100%;\n\n    @media (max-width: 750px) {\n        flex-direction: column;\n    }\n`;\n\nconst VideoPlayer = ({ videoSelected, videos }) => {\n    return (\n        <Fragment>\n            <Wrapper>\n                <VideoRectangle\n                    videoSelected={videoSelected}\n                    videos={videos}\n                />\n                <VideoList\n                    videoSelected={videoSelected}\n                    videos={videos}\n                />\n            </Wrapper>\n        </Fragment>\n    );\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport 'video-react/dist/video-react.css';\nimport VideoPlayer from './components/VideoPlayer';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    margin: 0 auto;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    height: 100vh;\n\n    @media (max-width: 750px) {\n        height: auto;\n    }\n`;\n\nconst App = () => {\n    const player = useSelector(state => state.player);\n\n    return (\n        <Wrapper className=\"App\">\n            <VideoPlayer\n                videoSelected={player.videoSelected}\n                videos={player.videos}\n            />\n        </Wrapper>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\nimport { initializeVideoData } from './state/actions';\nimport actionType from './state/actionTypes';\nimport videoData from './video-data.json';\n\nimport './index.css';\nimport App from './App';\n\nconst sortedVideos = videoData.videos.sort((a, b) => {\n    return a.name.localeCompare(b.name);\n});\n\nstore.dispatch(initializeVideoData(sortedVideos, actionType.HYDRATE_VIDEO_DATA));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}